<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="8" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-22T22:58:03 IST" name="Suite" finished-at="2025-08-22T22:59:08 IST" duration-ms="65099">
    <groups>
    </groups>
    <test started-at="2025-08-22T22:58:03 IST" name="Test" finished-at="2025-08-22T22:59:08 IST" duration-ms="65099">
      <class name="com.mbm.bookingtests.BookingTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:03 IST" name="setUp" finished-at="2025-08-22T22:58:33 IST" duration-ms="30325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getBookingIdsAndVerifyResponse(java.lang.reflect.Method)[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:33 IST" name="getBookingIdsAndVerifyResponse" finished-at="2025-08-22T22:58:36 IST" duration-ms="3263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mbm.bookingtests.BookingTests.getBookingIdsAndVerifyResponse(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookingIdsAndVerifyResponse -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:36 IST" name="afterMethod" finished-at="2025-08-22T22:58:36 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:41 IST" name="setUp" finished-at="2025-08-22T22:58:42 IST" duration-ms="1466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createBookingAndVerifyResponse(com.mbm.bookingpojos.Booking,java.lang.reflect.Method)[pri:1, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:42 IST" name="createBookingAndVerifyResponse" data-provider="BookingDataByPoiji" finished-at="2025-08-22T22:58:46 IST" duration-ms="4434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Booking(firstname=mbm, lastname=mannepalli, totalprice=3442, depositpaid=true, bookingdates=BookingDates(checkin=2025-02-17, checkout=2025-02-18), additionalneeds=Breakfast)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.mbm.bookingtests.BookingTests.createBookingAndVerifyResponse(com.mbm.bookingpojos.Booking,java.lang.reflect.Method) throws com.fasterxml.jackson.databind.JsonMappingException,com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingAndVerifyResponse -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:47 IST" name="afterMethod" finished-at="2025-08-22T22:58:47 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:47 IST" name="setUp" finished-at="2025-08-22T22:58:48 IST" duration-ms="1530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createBookingAndVerifyResponse(com.mbm.bookingpojos.Booking,java.lang.reflect.Method)[pri:1, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:48 IST" name="createBookingAndVerifyResponse" data-provider="BookingDataByPoiji" finished-at="2025-08-22T22:58:50 IST" duration-ms="2073" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Booking(firstname=Jack, lastname=Doe, totalprice=1000, depositpaid=false, bookingdates=BookingDates(checkin=2025-02-18, checkout=2025-02-25), additionalneeds=Lunch)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.mbm.bookingtests.BookingTests.createBookingAndVerifyResponse(com.mbm.bookingpojos.Booking,java.lang.reflect.Method) throws com.fasterxml.jackson.databind.JsonMappingException,com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingAndVerifyResponse -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:50 IST" name="afterMethod" finished-at="2025-08-22T22:58:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:50 IST" name="setUp" finished-at="2025-08-22T22:58:52 IST" duration-ms="1455" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="createBookingAndVerifyResponse(com.mbm.bookingpojos.Booking,java.lang.reflect.Method)[pri:1, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:52 IST" name="createBookingAndVerifyResponse" data-provider="BookingDataByPoiji" finished-at="2025-08-22T22:58:54 IST" duration-ms="2083" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Booking(firstname=tamoto, lastname=beto, totalprice=6000, depositpaid=true, bookingdates=BookingDates(checkin=2025-03-19, checkout=2025-03-25), additionalneeds=Dinner)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.mbm.bookingtests.BookingTests.createBookingAndVerifyResponse(com.mbm.bookingpojos.Booking,java.lang.reflect.Method) throws com.fasterxml.jackson.databind.JsonMappingException,com.fasterxml.jackson.core.JsonProcessingException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createBookingAndVerifyResponse -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:54 IST" name="afterMethod" finished-at="2025-08-22T22:58:54 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:54 IST" name="setUp" finished-at="2025-08-22T22:58:55 IST" duration-ms="1435" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getBookingDetailsAndVerifyResponse(java.lang.reflect.Method)[pri:2, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:55 IST" name="getBookingDetailsAndVerifyResponse" finished-at="2025-08-22T22:58:58 IST" duration-ms="3153" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mbm.bookingtests.BookingTests.getBookingDetailsAndVerifyResponse(java.lang.reflect.Method) throws java.io.IOException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getBookingDetailsAndVerifyResponse -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:58 IST" name="afterMethod" finished-at="2025-08-22T22:58:58 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:58:58 IST" name="setUp" finished-at="2025-08-22T22:59:00 IST" duration-ms="1396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getUpdateBookingAndVerifyResponse(java.lang.reflect.Method)[pri:4, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:59:00 IST" name="getUpdateBookingAndVerifyResponse" finished-at="2025-08-22T22:59:01 IST" duration-ms="1415" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mbm.bookingtests.BookingTests.getUpdateBookingAndVerifyResponse(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getUpdateBookingAndVerifyResponse -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:59:01 IST" name="afterMethod" finished-at="2025-08-22T22:59:01 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:59:01 IST" name="setUp" finished-at="2025-08-22T22:59:04 IST" duration-ms="2415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getPartialUpdateBooking(java.lang.reflect.Method)[pri:5, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:59:04 IST" name="getPartialUpdateBooking" finished-at="2025-08-22T22:59:05 IST" duration-ms="1400" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mbm.bookingtests.BookingTests.getPartialUpdateBooking(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getPartialUpdateBooking -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:59:05 IST" name="afterMethod" finished-at="2025-08-22T22:59:05 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:59:05 IST" name="setUp" finished-at="2025-08-22T22:59:06 IST" duration-ms="1403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="getDeleteBooking(java.lang.reflect.Method)[pri:6, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:59:06 IST" name="getDeleteBooking" finished-at="2025-08-22T22:59:08 IST" duration-ms="1434" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.mbm.bookingtests.BookingTests.getDeleteBooking(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getDeleteBooking -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:com.mbm.bookingtests.BookingTests@2807bdeb]" started-at="2025-08-22T22:59:08 IST" name="afterMethod" finished-at="2025-08-22T22:59:08 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.mbm.bookingtests.BookingTests -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
